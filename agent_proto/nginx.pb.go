// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: nginx.proto

package agent_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that agent_runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNginxInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNginxInfoRequest) Reset() {
	*x = GetNginxInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nginx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNginxInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNginxInfoRequest) ProtoMessage() {}

func (x *GetNginxInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nginx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNginxInfoRequest.ProtoReflect.Descriptor instead.
func (*GetNginxInfoRequest) Descriptor() ([]byte, []int) {
	return file_nginx_proto_rawDescGZIP(), []int{0}
}

type GetNginxInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message        string           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	NginxInstances []*NginxInstance `protobuf:"bytes,2,rep,name=nginxInstances,proto3" json:"nginxInstances,omitempty"`
}

func (x *GetNginxInfoResponse) Reset() {
	*x = GetNginxInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nginx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNginxInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNginxInfoResponse) ProtoMessage() {}

func (x *GetNginxInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nginx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNginxInfoResponse.ProtoReflect.Descriptor instead.
func (*GetNginxInfoResponse) Descriptor() ([]byte, []int) {
	return file_nginx_proto_rawDescGZIP(), []int{1}
}

func (x *GetNginxInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetNginxInfoResponse) GetNginxInstances() []*NginxInstance {
	if x != nil {
		return x.NginxInstances
	}
	return nil
}

type NginxInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigPath string           `protobuf:"bytes,1,opt,name=configPath,proto3" json:"configPath,omitempty"`
	Sites      []*NginxSiteInfo `protobuf:"bytes,2,rep,name=sites,proto3" json:"sites,omitempty"`
}

func (x *NginxInstance) Reset() {
	*x = NginxInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nginx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NginxInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NginxInstance) ProtoMessage() {}

func (x *NginxInstance) ProtoReflect() protoreflect.Message {
	mi := &file_nginx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NginxInstance.ProtoReflect.Descriptor instead.
func (*NginxInstance) Descriptor() ([]byte, []int) {
	return file_nginx_proto_rawDescGZIP(), []int{2}
}

func (x *NginxInstance) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

func (x *NginxInstance) GetSites() []*NginxSiteInfo {
	if x != nil {
		return x.Sites
	}
	return nil
}

type NginxSiteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listen       int32       `protobuf:"varint,1,opt,name=listen,proto3" json:"listen,omitempty"`
	DocumentRoot string      `protobuf:"bytes,2,opt,name=documentRoot,proto3" json:"documentRoot,omitempty"`
	ServerAlias  string      `protobuf:"bytes,3,opt,name=serverAlias,proto3" json:"serverAlias,omitempty"`
	ServerName   string      `protobuf:"bytes,4,opt,name=serverName,proto3" json:"serverName,omitempty"`
	AccessTime   string      `protobuf:"bytes,5,opt,name=accessTime,proto3" json:"accessTime,omitempty"`
	Logs         []*NginxLog `protobuf:"bytes,6,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *NginxSiteInfo) Reset() {
	*x = NginxSiteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nginx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NginxSiteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NginxSiteInfo) ProtoMessage() {}

func (x *NginxSiteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nginx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NginxSiteInfo.ProtoReflect.Descriptor instead.
func (*NginxSiteInfo) Descriptor() ([]byte, []int) {
	return file_nginx_proto_rawDescGZIP(), []int{3}
}

func (x *NginxSiteInfo) GetListen() int32 {
	if x != nil {
		return x.Listen
	}
	return 0
}

func (x *NginxSiteInfo) GetDocumentRoot() string {
	if x != nil {
		return x.DocumentRoot
	}
	return ""
}

func (x *NginxSiteInfo) GetServerAlias() string {
	if x != nil {
		return x.ServerAlias
	}
	return ""
}

func (x *NginxSiteInfo) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *NginxSiteInfo) GetAccessTime() string {
	if x != nil {
		return x.AccessTime
	}
	return ""
}

func (x *NginxSiteInfo) GetLogs() []*NginxLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type NginxLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	FilePath     string `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Size         uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	AccessTime   string `protobuf:"bytes,4,opt,name=accessTime,proto3" json:"accessTime,omitempty"`
	ModifiedTime string `protobuf:"bytes,5,opt,name=modifiedTime,proto3" json:"modifiedTime,omitempty"`
}

func (x *NginxLog) Reset() {
	*x = NginxLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nginx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NginxLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NginxLog) ProtoMessage() {}

func (x *NginxLog) ProtoReflect() protoreflect.Message {
	mi := &file_nginx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NginxLog.ProtoReflect.Descriptor instead.
func (*NginxLog) Descriptor() ([]byte, []int) {
	return file_nginx_proto_rawDescGZIP(), []int{4}
}

func (x *NginxLog) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NginxLog) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *NginxLog) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *NginxLog) GetAccessTime() string {
	if x != nil {
		return x.AccessTime
	}
	return ""
}

func (x *NginxLog) GetModifiedTime() string {
	if x != nil {
		return x.ModifiedTime
	}
	return ""
}

var File_nginx_proto protoreflect.FileDescriptor

var file_nginx_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6e, 0x67, 0x69, 0x6e, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x74, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x6e, 0x67, 0x69, 0x6e, 0x78, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x6e, 0x67, 0x69, 0x6e, 0x78, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x0d, 0x4e, 0x67, 0x69, 0x6e, 0x78,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x69, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x53, 0x69, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x0d, 0x4e,
	0x67, 0x69, 0x6e, 0x78, 0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x6f,
	0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x4c, 0x6f, 0x67, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x08, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x4c,
	0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x65, 0x0a, 0x0c, 0x4e, 0x67,
	0x69, 0x6e, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x67, 0x69, 0x6e,
	0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x67,
	0x69, 0x6e, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nginx_proto_rawDescOnce sync.Once
	file_nginx_proto_rawDescData = file_nginx_proto_rawDesc
)

func file_nginx_proto_rawDescGZIP() []byte {
	file_nginx_proto_rawDescOnce.Do(func() {
		file_nginx_proto_rawDescData = protoimpl.X.CompressGZIP(file_nginx_proto_rawDescData)
	})
	return file_nginx_proto_rawDescData
}

var file_nginx_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_nginx_proto_goTypes = []any{
	(*GetNginxInfoRequest)(nil),  // 0: agent_proto.GetNginxInfoRequest
	(*GetNginxInfoResponse)(nil), // 1: agent_proto.GetNginxInfoResponse
	(*NginxInstance)(nil),        // 2: agent_proto.NginxInstance
	(*NginxSiteInfo)(nil),        // 3: agent_proto.NginxSiteInfo
	(*NginxLog)(nil),             // 4: agent_proto.NginxLog
}
var file_nginx_proto_depIdxs = []int32{
	2, // 0: agent_proto.GetNginxInfoResponse.nginxInstances:type_name -> agent_proto.NginxInstance
	3, // 1: agent_proto.NginxInstance.sites:type_name -> agent_proto.NginxSiteInfo
	4, // 2: agent_proto.NginxSiteInfo.logs:type_name -> agent_proto.NginxLog
	0, // 3: agent_proto.NginxService.GetNginxInfo:input_type -> agent_proto.GetNginxInfoRequest
	1, // 4: agent_proto.NginxService.GetNginxInfo:output_type -> agent_proto.GetNginxInfoResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_nginx_proto_init() }
func file_nginx_proto_init() {
	if File_nginx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nginx_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetNginxInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nginx_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetNginxInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nginx_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NginxInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nginx_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NginxSiteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nginx_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NginxLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nginx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nginx_proto_goTypes,
		DependencyIndexes: file_nginx_proto_depIdxs,
		MessageInfos:      file_nginx_proto_msgTypes,
	}.Build()
	File_nginx_proto = out.File
	file_nginx_proto_rawDesc = nil
	file_nginx_proto_goTypes = nil
	file_nginx_proto_depIdxs = nil
}
